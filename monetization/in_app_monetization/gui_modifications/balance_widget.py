# balance_widget.py

import logging
from PySide6.QtWidgets import (
    QWidget, QLabel, QVBoxLayout, QPushButton, QHBoxLayout, 
    QFrame, QProgressBar, QToolTip
)
from PySide6.QtCore import Qt, Signal, QTimer, QPropertyAnimation, QEasingCurve
from PySide6.QtGui import QFont, QPalette, QColor, QPixmap, QPainter, QBrush

logger = logging.getLogger(__name__)

class BalanceWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –°–∏–≥–Ω–∞–ª—ã
    purchase_requested = Signal()  # –°–∏–≥–Ω–∞–ª –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–∫—É–ø–∫–∏
    balance_updated = Signal(int)  # –°–∏–≥–Ω–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    low_balance_warning = Signal(int)  # –°–∏–≥–Ω–∞–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–∏–∑–∫–æ–º –±–∞–ª–∞–Ω—Å–µ
    
    def __init__(self, balance=0, low_threshold=10, critical_threshold=5, parent=None):
        super().__init__(parent)
        self.balance = balance
        self.low_threshold = low_threshold
        self.critical_threshold = critical_threshold
        self.last_balance = balance
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        self.animation_timer = QTimer()
        self.animation_timer.timeout.connect(self._update_animation)
        
        self.setup_ui()
        self.update_balance_display()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤–∏–¥–∂–µ—Ç–∞"""
        self.setFixedSize(280, 120)
        self.setStyleSheet("""
            BalanceWidget {
                background-color: #f8f9fa;
                border: 2px solid #e9ecef;
                border-radius: 10px;
            }
        """)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(15, 10, 15, 10)
        main_layout.setSpacing(8)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header_layout = QHBoxLayout()
        
        self.title_label = QLabel("üí∞ –ë–∞–ª–∞–Ω—Å –º–∏–Ω—É—Ç")
        title_font = QFont()
        title_font.setPointSize(11)
        title_font.setBold(True)
        self.title_label.setFont(title_font)
        self.title_label.setStyleSheet("color: #495057; margin-bottom: 5px;")
        header_layout.addWidget(self.title_label)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.refresh_button = QPushButton("üîÑ")
        self.refresh_button.setFixedSize(25, 25)
        self.refresh_button.setStyleSheet("""
            QPushButton {
                background-color: #6c757d;
                color: white;
                border: none;
                border-radius: 12px;
                font-size: 12px;
            }
            QPushButton:hover {
                background-color: #5a6268;
            }
        """)
        self.refresh_button.clicked.connect(self.refresh_balance)
        self.refresh_button.setToolTip("–û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å")
        header_layout.addWidget(self.refresh_button)
        
        main_layout.addLayout(header_layout)
        
        # –ë–∞–ª–∞–Ω—Å
        balance_layout = QHBoxLayout()
        
        self.balance_label = QLabel(f"{self.balance}")
        balance_font = QFont()
        balance_font.setPointSize(18)
        balance_font.setBold(True)
        self.balance_label.setFont(balance_font)
        self.balance_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        balance_layout.addWidget(self.balance_label)
        
        self.minutes_label = QLabel("–º–∏–Ω—É—Ç")
        minutes_font = QFont()
        minutes_font.setPointSize(10)
        self.minutes_label.setFont(minutes_font)
        self.minutes_label.setStyleSheet("color: #6c757d; margin-left: 5px;")
        balance_layout.addWidget(self.minutes_label)
        
        balance_layout.addStretch()
        main_layout.addLayout(balance_layout)
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.status_bar = QProgressBar()
        self.status_bar.setFixedHeight(6)
        self.status_bar.setTextVisible(False)
        self.status_bar.setStyleSheet("""
            QProgressBar {
                border: none;
                border-radius: 3px;
                background-color: #e9ecef;
            }
            QProgressBar::chunk {
                border-radius: 3px;
            }
        """)
        main_layout.addWidget(self.status_bar)
        
        # –ö–Ω–æ–ø–∫–∞ –ø–æ–∫—É–ø–∫–∏
        self.buy_button = QPushButton("–ö—É–ø–∏—Ç—å –º–∏–Ω—É—Ç—ã")
        self.buy_button.setFixedHeight(32)
        self.buy_button.setStyleSheet("""
            QPushButton {
                background-color: #28a745;
                color: white;
                border: none;
                border-radius: 6px;
                font-weight: bold;
                font-size: 11px;
            }
            QPushButton:hover {
                background-color: #218838;
            }
            QPushButton:pressed {
                background-color: #1e7e34;
            }
        """)
        self.buy_button.clicked.connect(self.on_buy_clicked)
        main_layout.addWidget(self.buy_button)
        
    def update_balance(self, new_balance: int):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        
        Args:
            new_balance: –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –º–∏–Ω—É—Ç
        """
        if new_balance != self.balance:
            self.last_balance = self.balance
            self.balance = new_balance
            self.update_balance_display()
            self.balance_updated.emit(new_balance)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä–æ–≥–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
            self._check_balance_warnings()
    
    def update_balance_display(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞"""
        self.balance_label.setText(f"{self.balance}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ —Å—Ç–∏–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –±–∞–ª–∞–Ω—Å–∞
        if self.balance <= self.critical_threshold:
            # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å
            color = "#dc3545"  # –ö—Ä–∞—Å–Ω—ã–π
            status_color = "#dc3545"
            self.status_bar.setValue(20)
            self.buy_button.setText("‚ö†Ô∏è –°—Ä–æ—á–Ω–æ –∫—É–ø–∏—Ç—å!")
            self.buy_button.setStyleSheet("""
                QPushButton {
                    background-color: #dc3545;
                    color: white;
                    border: none;
                    border-radius: 6px;
                    font-weight: bold;
                    font-size: 11px;
                }
                QPushButton:hover {
                    background-color: #c82333;
                }
            """)
        elif self.balance <= self.low_threshold:
            # –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å
            color = "#fd7e14"  # –û—Ä–∞–Ω–∂–µ–≤—ã–π
            status_color = "#fd7e14"
            self.status_bar.setValue(50)
            self.buy_button.setText("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
            self.buy_button.setStyleSheet("""
                QPushButton {
                    background-color: #fd7e14;
                    color: white;
                    border: none;
                    border-radius: 6px;
                    font-weight: bold;
                    font-size: 11px;
                }
                QPushButton:hover {
                    background-color: #e8690b;
                }
            """)
        else:
            # –ù–æ—Ä–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
            color = "#28a745"  # –ó–µ–ª–µ–Ω—ã–π
            status_color = "#28a745"
            progress = min(100, (self.balance / (self.low_threshold * 2)) * 100)
            self.status_bar.setValue(int(progress))
            self.buy_button.setText("–ö—É–ø–∏—Ç—å –º–∏–Ω—É—Ç—ã")
            self.buy_button.setStyleSheet("""
                QPushButton {
                    background-color: #28a745;
                    color: white;
                    border: none;
                    border-radius: 6px;
                    font-weight: bold;
                    font-size: 11px;
                }
                QPushButton:hover {
                    background-color: #218838;
                }
            """)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –∫ –±–∞–ª–∞–Ω—Å—É
        self.balance_label.setStyleSheet(f"color: {color};")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        self.status_bar.setStyleSheet(f"""
            QProgressBar {{
                border: none;
                border-radius: 3px;
                background-color: #e9ecef;
            }}
            QProgressBar::chunk {{
                border-radius: 3px;
                background-color: {status_color};
            }}
        """)
    
    def _check_balance_warnings(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"""
        if self.balance <= self.critical_threshold:
            self.low_balance_warning.emit(self.balance)
        elif self.balance <= self.low_threshold and self.last_balance > self.low_threshold:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —á–µ—Ä–µ–∑ –ø–æ—Ä–æ–≥
            self.low_balance_warning.emit(self.balance)
    
    def on_buy_clicked(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏"""
        try:
            self.purchase_requested.emit()
            logger.info("Purchase request emitted from balance widget")
        except Exception as e:
            logger.error(f"Error in buy button click handler: {e}")
    
    def refresh_balance(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å (–∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–∏—Å—É)"""
        try:
            # –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            self.refresh_button.setText("‚ü≥")
            QTimer.singleShot(500, lambda: self.refresh_button.setText("üîÑ"))
            
            # –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
            self.balance_updated.emit(self.balance)
            logger.info("Balance refresh requested")
        except Exception as e:
            logger.error(f"Error refreshing balance: {e}")
    
    def set_thresholds(self, low_threshold: int, critical_threshold: int):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ—Ä–æ–≥–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
        
        Args:
            low_threshold: –ü–æ—Ä–æ–≥ –Ω–∏–∑–∫–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
            critical_threshold: –ü–æ—Ä–æ–≥ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
        """
        self.low_threshold = low_threshold
        self.critical_threshold = critical_threshold
        self.update_balance_display()
    
    def get_balance_status(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –±–∞–ª–∞–Ω—Å–∞
        
        Returns:
            str: 'critical', 'low', –∏–ª–∏ 'normal'
        """
        if self.balance <= self.critical_threshold:
            return 'critical'
        elif self.balance <= self.low_threshold:
            return 'low'
        else:
            return 'normal'
    
    def _update_animation(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)"""
        pass
    
    def show_tooltip(self, message: str):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
        
        Args:
            message: –¢–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
        """
        QToolTip.showText(self.mapToGlobal(self.rect().center()), message)
    
    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –≤–∏–¥–∂–µ—Ç–∞"""
        if self.animation_timer:
            self.animation_timer.stop()
        super().closeEvent(event)

if __name__ == '__main__':
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    from PySide6.QtWidgets import QApplication
    import sys

    app = QApplication(sys.argv)
    widget = BalanceWidget()
    widget.update_balance(120)
    widget.show()
    sys.exit(app.exec())